[tool.poetry]
name = "dgtu-autumn2024"
version = "0.1.0"
description = ""
authors = ["CoSm1C AvEnGeR <zhora.zhilin.06@mail.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
sqlalchemy = "^2.0.36"
fastapi = {extras = ["all"], version = "^0.115.3"}
asyncpg = "^0.30.0"
alembic = "^1.13.3"
dishka = "^1.4.0"
boto3 = "^1.35.49"
pydantic = {extras = ["email"], version = "^2.9.2"}
gunicorn = "^23.0.0"
redis = "^5.2.0"
firebase-admin = "^6.5.0"
qrcode = "^8.0"
pillow = "^11.0.0"
minio = "^7.2.10"

[tool.poetry.group.dev.dependencies]
setuptools = "^75.2.0"
flake8 = "^7.1.1"
flake8-bugbear = "^24.4.26"
flake8-comprehensions = "^3.15.0"
flake8-quotes = "^3.4.0"
isort = "^5.13.2"
mypy = "^1.11.1"
autoflake = "^2.3.1"
ruff = "^0.6.0"
black = "^24.8.0"
pre-commit = "^3.8.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.24.0"
psycopg2-binary = "^2.9.8"
requests-toolbelt = "^1.0.0"

[tool.black]
line-length = 79
target-version = ['py311']
exclude = '''
/(
    api/migrations
    | tg-bot
)/
'''

[tool.ruff]
line-length = 89
target-version="py311"
src = ["src"]
exclude = [
    "migrations/",
]
include = ["src/**.py", "tests/**.py"]

[tool.ruff.lint]
ignore = [
   "ARG",
   "ANN",
   "D",
   "EM101",
   "EM102",
   "PT001",
   "PT023",
   "SIM108",
   "SIM114",
   "TRY003",
   "PLW2901",
   "RET505",
   "PLR0913",
   "UP038",
   "TCH001",
   "SLF001",
   "COM812",
   "ISC001",
   "S101",
   "RUF002",
   "B008",
   "E721",
   "INP001",
   "ERA001", #  проверка на докстринги
   "RUF001", #  кириллица в докстрингах
   "RUF003" #  кириллица в комментах
]
select = [
  "ALL",
]

[tool.ruff.lint.isort]
no-lines-before = ["local-folder"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = "ignore::DeprecationWarning"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
